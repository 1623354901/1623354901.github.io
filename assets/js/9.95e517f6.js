(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{1174:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("blockquote",[s("p",[t._v("Ajax")])]),t._v(" "),s("h1",{attrs:{id:"一、jquery-中的-ajax"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、jquery-中的-ajax"}},[t._v("#")]),t._v(" 一、jquery 中的 ajax")]),t._v(" "),s("p",[t._v("浏览器中提供的 XMLHttpRequest 用法比较复杂，所以 jQuery 对 XMLHttpRequest 进行了封装，提供了一系列 Ajax 相关的函数，极大地降低了 Ajax 的使用难度。\njQuery 中发起 Ajax 请求最常用的三个方法如下：")]),t._v(" "),s("ul",[s("li",[t._v("$.get()")]),t._v(" "),s("li",[t._v("$.post()")]),t._v(" "),s("li",[t._v("$.ajax()")])]),t._v(" "),s("h2",{attrs:{id:"_1、-get-函数的语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、-get-函数的语法"}},[t._v("#")]),t._v(" 1、$.get()函数的语法")]),t._v(" "),s("p",[t._v("jQuery 中 $.get() 函数的功能单一，专门用来发起 get 请求，从而将服务器上的资源请求到客户端来进行使用。\n$.get() 函数的语法如下：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("callback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("其中，三个参数各自代表的含义如下：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("参数名")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("参数类型")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("是否必选")]),t._v(" "),s("th",{staticStyle:{"text-align":"right"}},[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("url")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("string")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("是")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("要请求的资源地址")])]),t._v(" "),s("tr",[s("td",[t._v("data")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Object")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("否")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("请求资源期间要携带的参数")])]),t._v(" "),s("tr",[s("td",[t._v("callback")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("function")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("否")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("请求成功时的回调函数")])])])]),t._v(" "),s("h2",{attrs:{id:"_2、-get-发起不带参数的请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、-get-发起不带参数的请求"}},[t._v("#")]),t._v(" 2、$.get()发起不带参数的请求")]),t._v(" "),s("p",[t._v("使用 $.get() 函数发起不带参数的请求时，直接提供请求的 URL 地址和请求成功之后的回调函数即可，示例代码如下：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$.get('http://www.liulongbin.top:3006/api/getbooks', function(res) {\n    console.log(res) // 这里的 res 是服务器返回的数据\n})\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("h2",{attrs:{id:"_3、-post-函数的语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、-post-函数的语法"}},[t._v("#")]),t._v(" 3、$.post()函数的语法")]),t._v(" "),s("p",[t._v("jQuery 中 $.post() 函数的功能单一，专门用来发起 post 请求，从而向服务器提交数据。\n$.post() 函数的语法如下：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$.post(url, [data], [callback])\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h2",{attrs:{id:"_4、-ajax-函数的语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、-ajax-函数的语法"}},[t._v("#")]),t._v(" 4、$.ajax()函数的语法")]),t._v(" "),s("p",[t._v("相比于 $.get() 和 $.post() 函数，jQuery 中提供的 $.ajax() 函数，是一个功能比较综合的函数，它允许我们对 Ajax 请求进行更详细的配置。\n$.ajax() 函数的基本语法如下：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$.ajax({\n   type: '', // 请求的方式，例如 GET 或 POST\n   url: '',  // 请求的 URL 地址\n   data: { },// 这次请求要携带的数据\n   success: function(res) { } // 请求成功之后的回调函数\n})\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("h1",{attrs:{id:"二、ajax-加强"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、ajax-加强"}},[t._v("#")]),t._v(" 二、AJAX 加强")]),t._v(" "),s("h2",{attrs:{id:"_1、xmlhttprequest-的基本使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、xmlhttprequest-的基本使用"}},[t._v("#")]),t._v(" 1、XMLHttpRequest 的基本使用")]),t._v(" "),s("h3",{attrs:{id:"_1-1-什么-xmlhttprequest"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-什么-xmlhttprequest"}},[t._v("#")]),t._v(" 1.1 什么 XMLHttpRequest")]),t._v(" "),s("p",[t._v("XMLHttpRequest（简称 xhr）是浏览器提供的 Javascript 对象，通过它，可以请求服务器上的数据资源。之前所学的 jQuery 中的 Ajax 函数，就是基于 xhr 对象封装出来的。\n"),s("img",{attrs:{src:a(865)}})]),t._v(" "),s("h3",{attrs:{id:"_1-2-使用-xhr-发起-get-请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-使用-xhr-发起-get-请求"}},[t._v("#")]),t._v(" 1.2 使用 xhr 发起 GET 请求")]),t._v(" "),s("p",[t._v("步骤：")]),t._v(" "),s("ol",[s("li",[t._v("创建  xhr  对象")]),t._v(" "),s("li",[t._v("调用  xhr.open()  函数")]),t._v(" "),s("li",[t._v("调用  xhr.send()  函数")]),t._v(" "),s("li",[t._v("监听  xhr.onreadystatechange  事件")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 创建 XHR 对象")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" xhr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("XMLHttpRequest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 调用 open 函数，指定 请求方式 与 URL地址")]),t._v("\nxhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"GET"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://www.liulongbin.top:3006/api/getbooks"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3. 调用 send 函数，发起 Ajax 请求")]),t._v("\nxhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4. 监听 onreadystatechange 事件")]),t._v("\nxhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onreadystatechange")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4.1 监听 xhr 对象的请求状态 readyState ；与服务器响应的状态 status")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("readyState "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" xhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("status "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4.2 打印服务器响应回来的数据")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("responseText"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br")])]),s("h3",{attrs:{id:"_1-3-了解-xhr-对象的-readystate-属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-了解-xhr-对象的-readystate-属性"}},[t._v("#")]),t._v(" 1.3 了解 xhr 对象的 readyState 属性")]),t._v(" "),s("p",[t._v("XMLHttpRequest 对象的 readyState 属性，用来表示当前 Ajax 请求所处的状态。每个 Ajax 请求必然处于以下状态中的一个：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("值")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("状态")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("0")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("UNSENT")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("XMLHttpRequest 对象已被创建，但尚未调用 open 方法。")])]),t._v(" "),s("tr",[s("td",[t._v("1")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("OPENED")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("open()  方法已经被调用。")])]),t._v(" "),s("tr",[s("td",[t._v("2")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("HEADERS_RECEIVED")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("send() 方法已经被调用，响应头也已经被接收。")])]),t._v(" "),s("tr",[s("td",[t._v("3")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("LOADING")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("数据接收中，此时 response 属性中已经包含部分数据。")])]),t._v(" "),s("tr",[s("td",[t._v("4")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("DONE")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Ajax 请求完成，这意味着数据传输已经彻底完成或失败。")])])])]),t._v(" "),s("h3",{attrs:{id:"_1-4-查询字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-查询字符串"}},[t._v("#")]),t._v(" 1.4 查询字符串")]),t._v(" "),s("p",[t._v("定义：查询字符串（URL 参数）是指在 URL 的末尾加上用于向服务器发送信息的字符串（变量）。\n格式：将英文的 ? 放在 URL 的末尾，然后再加上 参数＝值 ，想加上多个参数的话，使用 & 符号进行分隔。以这个形式，可以将想要发送给服务器的数据添加到 URL 中。")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不带参数的 URL 地址")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("http")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("www"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("liulongbin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("top"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3006")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("api"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("getbooks\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 带一个参数的 URL 地址")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("http")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("www"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("liulongbin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("top"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3006")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("api"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("getbooks"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 带两个参数的 URL 地址")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("http")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("www"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("liulongbin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("top"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3006")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("api"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("getbooks"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("bookname"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("西游记\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v("无论使用 $.ajax()，还是使用 $.get()，又或者直接使用 xhr 对象发起 GET 请求，当需要携带参数的时候，本质上，都是直接将参数以查询字符串的形式，追加到 URL 地址的后面，发送到服务器的")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$.get('url', {name: 'zs', age: 20}, function() {})\n// 等价于\n$.get('url?name=zs&age=20', function() {})\n\n$.ajax({ method: 'GET', url: 'url', data: {name: 'zs', age: 20}, success: function() {} })\n// 等价于\n$.ajax({ method: 'GET', url: 'url?name=zs&age=20', success: function() {} })\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("h3",{attrs:{id:"_1-5-url-编码与解码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-url-编码与解码"}},[t._v("#")]),t._v(" 1.5 URL 编码与解码")]),t._v(" "),s("ol",[s("li",[t._v("什么是 URL 编码\nURL 地址中，只允许出现英文相关的字母、标点符号、数字，因此，在 URL 地址中不允许出现中文字符。\n如果 URL 中需要包含中文这样的字符，则必须对中文字符进行编码（转义）。\nURL 编码的原则：使用安全的字符（没有特殊用途或者特殊意义的可打印字符）去表示那些不安全的字符。\nURL 编码原则的通俗理解：使用英文字符去表示非英文字符。")])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("http://www.liulongbin.top:3006/api/getbooks?id=1&bookname=西游记\n// 经过 URL 编码之后，URL地址变成了如下格式：\nhttp://www.liulongbin.top:3006/api/getbooks?id=1&bookname=%E8%A5%BF%E6%B8%B8%E8%AE%B0\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("如何对 URL 进行编码与解码\n浏览器提供了 URL 编码与解码的 API，分别是：")])]),t._v(" "),s("ul",[s("li",[t._v("encodeURI() 编码的函数")]),t._v(" "),s("li",[t._v("decodeURI() 解码的函数")])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("encodeURI('黑马程序员')\n// 输出字符串  %E9%BB%91%E9%A9%AC%E7%A8%8B%E5%BA%8F%E5%91%98\ndecodeURI('%E9%BB%91%E9%A9%AC')\n// 输出字符串  黑马\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("由于浏览器会自动对 URL 地址进行编码操作，因此，大多数情况下，程序员不需要关心 URL 地址的编码与解码操作。")]),t._v(" "),s("h3",{attrs:{id:"_1-7-使用-xhr-发起-post-请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-7-使用-xhr-发起-post-请求"}},[t._v("#")]),t._v(" 1.7 使用 xhr 发起 POST 请求")]),t._v(" "),s("ul",[s("li",[t._v("创建  xhr  对象")]),t._v(" "),s("li",[t._v("调用  xhr.open()  函数")]),t._v(" "),s("li",[t._v("设置  Content-Type  属性（固定写法）")]),t._v(" "),s("li",[t._v("调用  xhr.send()  函数，同时指定要发送的数据")]),t._v(" "),s("li",[t._v("监听  xhr.onreadystatechange  事件")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 创建 xhr 对象")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" xhr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("XMLHttpRequest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 调用 open()")]),t._v("\nxhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"POST"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://www.liulongbin.top:3006/api/addbook"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3. 设置 Content-Type 属性（固定写法）")]),t._v("\nxhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setRequestHeader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Content-Type"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"application/x-www-form-urlencoded"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4. 调用 send()，同时将数据以查询字符串的形式，提交给服务器")]),t._v("\nxhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bookname=水浒传&author=施耐庵&publisher=天津图书出版社"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5. 监听 onreadystatechange 事件")]),t._v("\nxhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onreadystatechange")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("readyState "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" xhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("status "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("responseText"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br")])]),s("h2",{attrs:{id:"_2、数据交换格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、数据交换格式"}},[t._v("#")]),t._v(" 2、数据交换格式")]),t._v(" "),s("h3",{attrs:{id:"_2-1-什么是数据交换格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-什么是数据交换格式"}},[t._v("#")]),t._v(" 2.1 什么是数据交换格式")]),t._v(" "),s("p",[t._v("数据交换格式，就是"),s("code",[t._v("服务器端")]),t._v("与"),s("code",[t._v("客户端")]),t._v("之间进行"),s("code",[t._v("数据传输与交换的格式")]),t._v("。\n前端领域，经常提及的两种数据交换格式分别是 "),s("code",[t._v("XML")]),t._v(" 和 "),s("code",[t._v("JSON")]),t._v("。其中 XML 用的非常少，所以，我们重点要学习的数据交换格式就是 JSON。")]),t._v(" "),s("h3",{attrs:{id:"_2-2-xml"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-xml"}},[t._v("#")]),t._v(" 2.2 XML")]),t._v(" "),s("p",[t._v("XML 的英文全称是 EXtensible Markup Language，即可扩展标记语言。因此，XML 和 HTML 类似，也是一种标记语言。\n"),s("img",{attrs:{src:a(866)}})]),t._v(" "),s("ol",[s("li",[t._v("XML 和 HTML 的区别")])]),t._v(" "),s("p",[t._v("XML 和 HTML 虽然都是标记语言，但是，它们两者之间没有任何的关系。")]),t._v(" "),s("ul",[s("li",[t._v("HTML 被设计用来描述网页上的内容，是网页内容的载体")]),t._v(" "),s("li",[t._v("XML 被设计用来传输和存储数据，是数据的载体\n"),s("img",{attrs:{src:a(867)}})])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[s("p",[t._v("XML 的缺点")]),t._v(" "),s("p",[t._v("XML 格式臃肿，和数据无关的代码多，体积大，传输效率低\n在 Javascript 中解析 XML 比较麻烦")])])]),t._v(" "),s("h3",{attrs:{id:"_2-3-json"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-json"}},[t._v("#")]),t._v(" 2.3 JSON")]),t._v(" "),s("p",[t._v("概念：JSON 的英文全称是 JavaScript Object Notation，即“JavaScript 对象表示法”。简单来讲，"),s("code",[t._v("JSON 就是 Javascript 对象和数组的字符串表示法")]),t._v("，它使用文本表示一个 JS 对象或数组的信息，因此，JSON 的本质是字符串。\n作用：JSON 是一种"),s("code",[t._v("轻量级的文本数据交换格式")]),t._v("，在作用上类似于 XML，专门用于存储和传输数据，但是 JSON 比 XML "),s("code",[t._v("更小、更快、更易解析")]),t._v("。\n现状：JSON 是在 2001 年开始被推广和使用的数据格式，到现今为止，"),s("code",[t._v("JSON 已经成为了主流的数据交换格式")]),t._v("。")]),t._v(" "),s("ol",[s("li",[t._v("JSON 的两种结构")])]),t._v(" "),s("p",[t._v("JSON 就是用字符串来表示 Javascript 的对象和数组。所以，JSON 中包含"),s("code",[t._v("对象")]),t._v("和"),s("code",[t._v("数组")]),t._v("两种结构，通过这两种结构的"),s("code",[t._v("相互嵌套")]),t._v("，可以表示各种复杂的数据结构。\n"),s("code",[t._v("对象结构")]),t._v("：对象结构在 JSON 中表示为 { } 括起来的内容。数据结构为 { key: value, key: value, … } 的键值对结构。其中，key 必须是使用"),s("code",[t._v("英文的双引号包裹的字符串")]),t._v("，value 的数据类型可以是"),s("code",[t._v("数字、字符串、布尔值、null、数组、对象")]),t._v("6 种类型。\n"),s("img",{attrs:{src:a(868)}}),t._v(" "),s("code",[t._v("数组结构")]),t._v('：数组结构在 JSON 中表示为 [ ] 括起来的内容。数据结构为 [ "java", "javascript", 30, true … ] 。数组中数据的类型可以是'),s("code",[t._v("数字、字符串、布尔值、null、数组、对象")]),t._v("6 种类型。")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('[ "java", "python", "php" ]\n[ 100, 200, 300.5 ]\n[ true, false, null ]\n[ { "name": "zs", "age": 20}, { "name": "ls", "age": 30} ]\n[ [ "苹果", "榴莲", "椰子" ], [ 4, 50, 5 ] ]\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("JSON 语法注意事项")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("属性名必须使用双引号包裹")])]),t._v(" "),s("li",[s("p",[t._v("字符串类型的值必须使用双引号包裹")])]),t._v(" "),s("li",[s("p",[t._v("JSON 中不允许使用单引号表示字符串")])]),t._v(" "),s("li",[s("p",[t._v("JSON 中不能写注释")])]),t._v(" "),s("li",[s("p",[t._v("JSON 的最外层必须是对象或数组格式")])]),t._v(" "),s("li",[s("p",[t._v("不能使用 undefined 或函数作为 JSON 的值")]),t._v(" "),s("p",[s("code",[t._v("JSON 的作用")]),t._v("：在计算机与网络之间存储和传输数据。\n"),s("code",[t._v("JSON 的本质")]),t._v("：用字符串来表示 Javascript 对象数据或数组数据")])])]),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[t._v("JSON 和 JS 对象的互转")])]),t._v(" "),s("p",[t._v("从 JSON 字符串转换为 JS 对象，使用 "),s("code",[t._v("JSON.parse()")]),t._v(" 方法：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('var obj = JSON.parse(\'{"a": "Hello", "b": "World"}\')\n//结果是 {a: \'Hello\', b: \'World\'}\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("JS 对象转换为 JSON 字符串，使用 "),s("code",[t._v("JSON.stringify()")]),t._v(" 方法")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('var json = JSON.stringify({a: \'Hello\', b: \'World\'})\n//结果是 \'{"a": "Hello", "b": "World"}\'\n\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("把"),s("code",[t._v("数据对象转换为字符串")]),t._v("的过程，叫做"),s("code",[t._v("序列化")]),t._v("，例如：调用 JSON.stringify() 函数的操作，叫做 JSON 序列化。\n把"),s("code",[t._v("字符串转换为数据对象")]),t._v("的过程，叫做"),s("code",[t._v("反序列化")]),t._v("，例如：调用 JSON.parse() 函数的操作，叫做 JSON 反序列化。")]),t._v(" "),s("h2",{attrs:{id:"_3、axios"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、axios"}},[t._v("#")]),t._v(" 3、axios")]),t._v(" "),s("p",[t._v("Axios 是专注于"),s("code",[t._v("网络数据请求")]),t._v("的库。\n相比于原生的 XMLHttpRequest 对象，axios "),s("code",[t._v("简单易用")]),t._v("。\n相比于 jQuery，axios 更加"),s("code",[t._v("轻量化")]),t._v("，只专注于网络数据请求。")]),t._v(" "),s("h3",{attrs:{id:"_3-1-axios-发起-get-请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-axios-发起-get-请求"}},[t._v("#")]),t._v(" 3.1 axios 发起 GET 请求")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("axios.get('url', { params: { /*参数*/ } }).then(callback)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 请求的 URL 地址")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" url "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://www.liulongbin.top:3006/api/post"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 要提交到服务器的数据")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" dataObj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("location")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"北京"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("address")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"顺义"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用 axios.post() 发起 POST 请求")]),t._v("\naxios"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("post")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dataObj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("res")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// res.data 是服务器返回的数据")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br")])]),s("p",[t._v("直接使用 axios 发起请求:\naxios 也提供了类似于 jQuery 中 $.ajax() 的函数，语法如下：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("axios")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("method")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"请求类型"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("url")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"请求的URL地址"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("data")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* POST数据 */")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("params")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* GET参数 */")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("callback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//直接使用axios发起GET请求;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("axios")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("method")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"GET"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("url")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://www.liulongbin.top:3006/api/get"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("params")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GET 参数要通过 params 属性提供")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"zs"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("age")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("res")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//直接使用axios发起POST请求")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("axios")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("method")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"POST"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("url")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://www.liulongbin.top:3006/api/post"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("data")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// POST 数据要通过 data 属性提供")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("bookname")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"程序员的自我修养"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("price")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("666")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("res")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br")])]),s("h1",{attrs:{id:"三、跨域与-jsonp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、跨域与-jsonp"}},[t._v("#")]),t._v(" 三、跨域与 JSONP")]),t._v(" "),s("h2",{attrs:{id:"_1、同源策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、同源策略"}},[t._v("#")]),t._v(" 1、同源策略")]),t._v(" "),s("ol",[s("li",[t._v("同源")])]),t._v(" "),s("p",[t._v("如果两个页面的协议，域名和端口都相同，则两个页面具有相同的源。\n"),s("img",{attrs:{src:a(869)}})]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("同源策略\n"),s("blockquote",[s("p",[t._v("同源策略（英文全称 Same origin policy）是浏览器提供的一个安全功能。\nMDN 官方给定的概念：同源策略限制了从同一个源加载的文档或脚本如何与来自另一个源的资源进行交互。这是一个用于隔离潜在恶意文件的重要安全机制。\n通俗的理解：浏览器规定，A 网站的 JavaScript，不允许和非同源的网站 C 之间，进行资源的交互，例如：\n无法读取非同源网页的 Cookie、LocalStorage 和 IndexedDB\n无法接触非同源网页的 DOM\n无法向非同源地址发送 Ajax 请求")])])]),t._v(" "),s("li",[t._v("什么是跨域")])]),t._v(" "),s("p",[t._v("同源指的是两个 URL 的协议、域名、端口一致，反之，则是跨域。\n出现跨域的根本原因：浏览器的同源策略不允许非同源的 URL 之间进行资源的交互。\n网页：http://www.test.com/index.html\n接口：http://www.api.com/userlist\n"),s("img",{attrs:{src:a(870)}})]),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[t._v("如何实现跨域数据请求")])]),t._v(" "),s("p",[t._v("现如今，实现跨域数据请求，最主要的两种解决方案，分别是 "),s("code",[t._v("JSONP")]),t._v(" 和 "),s("code",[t._v("CORS")]),t._v("。\nJSONP：出现的早，兼容性好（兼容低版本 IE）。是前端程序员为了解决跨域问题，被迫想出来的一种临时解决方案。缺点是"),s("code",[t._v("只支持 GET 请求")]),t._v("，不支持 POST 请求。\nCORS：出现的较晚，它是 W3C 标准，属于跨域 Ajax 请求的根本解决方案。支持 GET 和 POST 请求。缺点是不兼容某些低版本的浏览器。")]),t._v(" "),s("ol",{attrs:{start:"5"}},[s("li",[t._v("JSONP\nJSONP (JSON with Padding) 是 JSON 的一种“使用模式”，可用于解决主流浏览器的跨域数据访问的问题")]),t._v(" "),s("li",[t._v("JSONP 的实现原理\n"),s("blockquote",[s("p",[t._v("由于浏览器同源策略的限制，网页中无法通过 Ajax 请求非同源的接口数据。但是 < script > 标签不受浏览器同源策略的影响，可以通过 src 属性，请求非同源的 js 脚本。\n因此，JSONP 的实现原理，就是通过 < script > 标签的 src 属性，请求跨域的数据接口，并通过函数调用的形式，接收跨域接口响应回来的数据。")])])]),t._v(" "),s("li",[t._v("JSONP 的缺点\n"),s("blockquote",[s("p",[t._v("由于 JSONP 是通过 < script > 标签的 src 属性，来实现跨域数据获取的，所以，JSONP 只支持 GET 数据请求，不支持 POST 请求。\n注意："),s("code",[t._v("JSONP 和 Ajax 之间没有任何关系")]),t._v("，不能把 JSONP 请求数据的方式叫做 Ajax，因为 JSONP 没有用到 XMLHttpRequest 这个对象。")])])]),t._v(" "),s("li",[t._v("jQuery 中的 JSONP")])]),t._v(" "),s("p",[t._v("jQuery 提供的 $.ajax() 函数，除了可以发起真正的 Ajax 数据请求之外，还能够发起 JSONP 数据请求，例如：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ajax")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("url")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://ajax.frontend.itheima.net:3006/api/jsonp?name=zs&age=20"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果要使用 $.ajax() 发起 JSONP 请求，必须指定 datatype 为 jsonp")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("dataType")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jsonp"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("success")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("res")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("p",[t._v("默认情况下，使用 jQuery 发起 JSONP 请求，会自动携带一个 callback=jQueryxxx 的参数，jQueryxxx 是随机生成的一个回调函数名称。")]),t._v(" "),s("ol",{attrs:{start:"9"}},[s("li",[t._v("jQuery 中 JSONP 的实现过程\njQuery 中的 JSONP，也是通过 < script > 标签的 src 属性实现跨域数据访问的，只不过，jQuery 采用的是"),s("code",[t._v("动态创建和移除 <script> 标签的方式")]),t._v("，来发起 JSONP 数据请求。\n在"),s("code",[t._v("发起 JSONP 请求")]),t._v("的时候，动态向 < header > 中 append 一个 < script > 标签；\n在 "),s("code",[t._v("JSONP 请求成功")]),t._v("以后，动态从 < header > 中移除刚才 append 进去的 < script > 标签；")])]),t._v(" "),s("h1",{attrs:{id:"四、防抖和节流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、防抖和节流"}},[t._v("#")]),t._v(" 四、防抖和节流")]),t._v(" "),s("h2",{attrs:{id:"_1、防抖"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、防抖"}},[t._v("#")]),t._v(" 1、防抖")]),t._v(" "),s("p",[s("code",[t._v("防抖策略")]),t._v("（debounce）是当事件被触发后，"),s("code",[t._v("延迟 n 秒")]),t._v("后再"),s("code",[t._v("执行回调")]),t._v("，如果在这"),s("code",[t._v("n 秒内事件又被触发")]),t._v("，则"),s("code",[t._v("重新计时")]),t._v("。\n"),s("img",{attrs:{src:a(871)}})]),t._v(" "),s("h2",{attrs:{id:"_2、防抖的应用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、防抖的应用场景"}},[t._v("#")]),t._v(" 2、防抖的应用场景")]),t._v(" "),s("p",[t._v("用户在输入框中连续输入一串字符时，可以通过防抖策略，只在输入完后，才执行查询的请求，这样可以有效减少请求次数，节约请求资源；")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("//实现输入框的防抖\n var timer = null                    // 1. 防抖动的 timer\n\n function debounceSearch(keywords) { // 2. 定义防抖的函数\n    timer = setTimeout(function() {\n    // 发起 JSONP 请求\n    getSuggestList(keywords)\n    }, 500)\n }\n\n $('#ipt').on('keyup', function() {  // 3. 在触发 keyup 事件时，立即清空 timer\n    clearTimeout(timer)\n    // ...省略其他代码\n    debounceSearch(keywords)\n })\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br")])]),s("h2",{attrs:{id:"_3、节流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、节流"}},[t._v("#")]),t._v(" 3、节流")]),t._v(" "),s("p",[s("code",[t._v("节流策略（throttle）")]),t._v("，顾名思义，可以减少一段时间内事件的触发频率。\n"),s("img",{attrs:{src:a(872)}})]),t._v(" "),s("h2",{attrs:{id:"_4、节流的应用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、节流的应用场景"}},[t._v("#")]),t._v(" 4、节流的应用场景")]),t._v(" "),s("ul",[s("li",[t._v("鼠标连续不断地触发某事件（如点击），只在单位时间内只触发一次；")]),t._v(" "),s("li",[t._v("懒加载时要监听计算滚动条的位置，但不必每次滑动都触发，可以降低计算的频率，而不必去浪费 CPU 资源；")])]),t._v(" "),s("h2",{attrs:{id:"_5、节流阀的概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5、节流阀的概念"}},[t._v("#")]),t._v(" 5、节流阀的概念")]),t._v(" "),s("p",[t._v("高铁卫生间是否被占用，由红绿灯控制，"),s("code",[t._v("红灯")]),t._v("表示"),s("code",[t._v("被占用")]),t._v("，"),s("code",[t._v("绿灯")]),t._v("表示"),s("code",[t._v("可使用")]),t._v("。\n假设每个人上卫生间都需要花费 "),s("code",[t._v("5 分钟")]),t._v("，则"),s("code",[t._v("五分钟之内")]),t._v("，被占用的卫生间无法被其他人使用。\n上一个人使用完毕后，需要将红灯"),s("code",[t._v("重置")]),t._v("为绿灯，表示下一个人可以使用卫生间。\n下一个人在上卫生间之前，需要"),s("code",[t._v("先判断控制灯")]),t._v("是否为绿色，来知晓能否上卫生间。")]),t._v(" "),s("p",[t._v("节流阀为"),s("code",[t._v("空")]),t._v("，表示"),s("code",[t._v("可以执行下次操作")]),t._v("；"),s("code",[t._v("不为空")]),t._v("，表示"),s("code",[t._v("不能执行下次操作")]),t._v("。\n当前操作执行完，必须将节流阀"),s("code",[t._v("重置")]),t._v("为空，表示可以执行下次操作了。\n每次执行操作前，必须"),s("code",[t._v("先判断节流阀是否为空")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"_6、使用节流优化鼠标跟随效果"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6、使用节流优化鼠标跟随效果"}},[t._v("#")]),t._v(" 6、使用节流优化鼠标跟随效果")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" angel "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#angel"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" timer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1.预定义一个 timer 节流阀")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mousemove"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3.判断节流阀是否为空，如果不为空，则证明距离上次执行间隔不足16毫秒")]),t._v("\n    timer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("angel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("css")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"left"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pageX "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"px"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("css")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"top"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pageY "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"px"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      timer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2.当设置了鼠标跟随效果后，清空 timer 节流阀，方便下次开启延时器")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br")])]),s("h2",{attrs:{id:"_7、总结防抖和节流的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7、总结防抖和节流的区别"}},[t._v("#")]),t._v(" 7、总结防抖和节流的区别")]),t._v(" "),s("ul",[s("li",[t._v("防抖：如果事件被频繁触发，防抖能保证"),s("code",[t._v("只有最有一次触发生效")]),t._v("！前面 N 多次的触发都会被忽略！")]),t._v(" "),s("li",[t._v("节流：如果事件被频繁触发，节流能够"),s("code",[t._v("减少事件触发的频率")]),t._v("，因此，节流是"),s("code",[t._v("有选择性地")]),t._v("执行一部分事件！")])]),t._v(" "),s("h1",{attrs:{id:"五、http"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#五、http"}},[t._v("#")]),t._v(" 五、HTTP")]),t._v(" "),s("h2",{attrs:{id:"_1、http-协议简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、http-协议简介"}},[t._v("#")]),t._v(" 1、HTTP 协议简介")]),t._v(" "),s("h3",{attrs:{id:"_1-1-什么是通信"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-什么是通信"}},[t._v("#")]),t._v(" 1.1 什么是通信")]),t._v(" "),s("ul",[s("li",[t._v("通信，就是"),s("code",[t._v("信息的传递和交换")]),t._v("。")])]),t._v(" "),s("p",[t._v("通信三要素：")]),t._v(" "),s("ul",[s("li",[t._v("通信的主体")]),t._v(" "),s("li",[t._v("通信的内容")]),t._v(" "),s("li",[t._v("通信的方式")])]),t._v(" "),s("h3",{attrs:{id:"_1-2-通信协议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-通信协议"}},[t._v("#")]),t._v(" 1.2 通信协议")]),t._v(" "),s("p",[s("code",[t._v("通信协议")]),t._v("（Communication Protocol）是指通信的双方完成通信所"),s("code",[t._v("必须遵守")]),t._v("的"),s("code",[t._v("规则和约定")]),t._v("。\n通俗的理解：通信"),s("code",[t._v("双方采用约定好的格式")]),t._v("来发送和接收消息，这种"),s("code",[t._v("事先约定好的通信格式，就叫做通信协议")]),t._v("。")]),t._v(" "),s("ul",[s("li",[t._v("现实中的通信协议\n"),s("img",{attrs:{src:a(873)}})]),t._v(" "),s("li",[t._v("互联网中的通信协议\n客户端与服务器之间要实现"),s("code",[t._v("网页内容")]),t._v("的传输，则通信的双方必须遵守"),s("code",[t._v("网页内容的传输协议")]),t._v("。\n网页内容又叫做"),s("code",[t._v("超文本")]),t._v("，因此"),s("code",[t._v("网页内容的传输协议")]),t._v("又叫做"),s("code",[t._v("超文本传输协议")]),t._v("（HyperText Transfer Protocol） ，简称 "),s("code",[t._v("HTTP 协议")]),t._v("。")])]),t._v(" "),s("h3",{attrs:{id:"_1-3-http"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-http"}},[t._v("#")]),t._v(" 1.3 HTTP")]),t._v(" "),s("h4",{attrs:{id:"_1-什么是-http-协议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是-http-协议"}},[t._v("#")]),t._v(" (1) 什么是 HTTP 协议")]),t._v(" "),s("p",[s("code",[t._v("HTTP 协议")]),t._v("即超文本传送协议 (HyperText Transfer Protocol) ，它规定了客户端与服务器之间进行网页内容传输时，所必须遵守的传输格式。\n例如：\n"),s("code",[t._v("客户端")]),t._v("要以 HTTP 协议要求的格式把数据"),s("code",[t._v("提交")]),t._v("到"),s("code",[t._v("服务器")]),t._v(" "),s("code",[t._v("服务器")]),t._v("要以 HTTP 协议要求的格式把内容"),s("code",[t._v("响应")]),t._v("给"),s("code",[t._v("客户端")])]),t._v(" "),s("h4",{attrs:{id:"_2-http-协议的交互模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-http-协议的交互模型"}},[t._v("#")]),t._v(" (2) HTTP 协议的交互模型")]),t._v(" "),s("p",[t._v("HTTP 协议采用了 请求/响应 的交互模型。\n"),s("img",{attrs:{src:a(874)}})]),t._v(" "),s("h2",{attrs:{id:"二、http-请求消息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、http-请求消息"}},[t._v("#")]),t._v(" 二、HTTP 请求消息")]),t._v(" "),s("h3",{attrs:{id:"_2-1-什么是-http-请求消息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-什么是-http-请求消息"}},[t._v("#")]),t._v(" 2.1 什么是 HTTP 请求消息")]),t._v(" "),s("p",[t._v("由于 HTTP 协议属于客户端浏览器和服务器之间的通信协议。因此，"),s("code",[t._v("客户端发起的请求")]),t._v("叫做"),s("code",[t._v("HTTP 请求")]),t._v("，"),s("code",[t._v("客户端发送到服务器的消息")]),t._v("，叫做"),s("code",[t._v("HTTP 请求消息")]),t._v("。\n注意：HTTP "),s("code",[t._v("请求消息")]),t._v("又叫做 HTTP "),s("code",[t._v("请求报文")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"_2-2-http-请求消息的组成部分"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-http-请求消息的组成部分"}},[t._v("#")]),t._v(" 2.2 HTTP 请求消息的组成部分")]),t._v(" "),s("p",[t._v("HTTP 请求消息由"),s("code",[t._v("请求行")]),t._v("（request line）、"),s("code",[t._v("请求头部")]),t._v("（ header ） 、"),s("code",[t._v("空行")]),t._v(" 和 "),s("code",[t._v("请求体")]),t._v(" 4 个部分组成。\n"),s("img",{attrs:{src:a(875)}})]),t._v(" "),s("h4",{attrs:{id:"_1-请求行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-请求行"}},[t._v("#")]),t._v(" (1) 请求行")]),t._v(" "),s("p",[t._v("请求行由"),s("code",[t._v("请求方式")]),t._v("、"),s("code",[t._v("URL")]),t._v(" 和 "),s("code",[t._v("HTTP 协议版本")]),t._v(" 3 个部分组成，他们之间使用空格隔开。\n"),s("img",{attrs:{src:a(876)}})]),t._v(" "),s("h4",{attrs:{id:"_2-请求头部"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-请求头部"}},[t._v("#")]),t._v(" (2)请求头部")]),t._v(" "),s("p",[s("code",[t._v("请求头部")]),t._v("用来描述"),s("code",[t._v("客户端的基本信息")]),t._v("，从而把"),s("code",[t._v("客户端相关的信息告知服务器")]),t._v("。比如：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("User-Agent 用来说明当前是什么类型的浏览器；")])]),t._v(" "),s("li",[s("p",[t._v("Content-Type 用来描述发送到服务器的数据格式；")])]),t._v(" "),s("li",[s("p",[t._v("Accept 用来描述客户端能够接收什么类型的返回内容；")])]),t._v(" "),s("li",[s("p",[t._v("Accept-Language 用来描述客户端期望接收哪种人类语言的文本内容。")]),t._v(" "),s("p",[t._v("请求头部由多行 "),s("code",[t._v("键/值对")]),t._v(" 组成，每行的键和值之间用英文的冒号分隔。\n"),s("img",{attrs:{src:a(877)}})])])]),t._v(" "),s("h4",{attrs:{id:"_3-请求头部-常见的请求头字段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-请求头部-常见的请求头字段"}},[t._v("#")]),t._v(" (3)请求头部 – 常见的请求头字段")]),t._v(" "),s("img",{attrs:{src:a(878)}}),t._v(" "),s("img",{attrs:{src:a(879)}}),t._v("\n关于更多请求头字段的描述，可以查看 [MDN 官方文档](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers)\n"),s("h4",{attrs:{id:"_4-空行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-空行"}},[t._v("#")]),t._v(" (4) 空行")]),t._v(" "),s("p",[t._v("最后一个请求头字段的后面是一个"),s("code",[t._v("空行")]),t._v("，通知服务器"),s("code",[t._v("请求头部至此结束")]),t._v("。\n请求消息中的空行，用来分隔"),s("code",[t._v("请求头部")]),t._v("与"),s("code",[t._v("请求体")]),t._v("。\n"),s("img",{attrs:{src:a(880)}})]),t._v(" "),s("h4",{attrs:{id:"_5-请求体"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-请求体"}},[t._v("#")]),t._v(" (5) 请求体")]),t._v(" "),s("p",[t._v("请求体中存放的，是要通过 "),s("code",[t._v("POST 方式")]),t._v("提交到服务器的数据。\n"),s("img",{attrs:{src:a(881)}})]),t._v(" "),s("p",[s("font",{attrs:{color:"red"}},[t._v("注意")]),t._v("：只有 POST 请求才有请求体，GET 请求没有请求体！")],1),t._v(" "),s("h2",{attrs:{id:"三、http-响应消息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、http-响应消息"}},[t._v("#")]),t._v(" 三、HTTP 响应消息")]),t._v(" "),s("h3",{attrs:{id:"_1、什么是-http-响应消息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、什么是-http-响应消息"}},[t._v("#")]),t._v(" 1、什么是 HTTP 响应消息")]),t._v(" "),s("p",[s("code",[t._v("响应消息")]),t._v("就是"),s("code",[t._v("服务器响应给客户端的消息内容")]),t._v("，也叫作响应报文。\nHTTP 响应消息由"),s("code",[t._v("状态行")]),t._v("、"),s("code",[t._v("响应头部")]),t._v("、"),s("code",[t._v("空行")]),t._v(" 和 "),s("code",[t._v("响应体")]),t._v(" 4 个部分组成，如下图所示\n"),s("img",{attrs:{src:a(882)}})]),t._v(" "),s("h4",{attrs:{id:"_1-状态行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-状态行"}},[t._v("#")]),t._v(" (1)状态行")]),t._v(" "),s("p",[s("code",[t._v("状态行")]),t._v("由 "),s("code",[t._v("HTTP 协议版本")]),t._v("、"),s("code",[t._v("状态码")]),t._v("和"),s("code",[t._v("状态码")]),t._v("的描述文本 3 个部分组成，他们之间使用空格隔开;\n"),s("img",{attrs:{src:a(883)}}),t._v(" "),s("img",{attrs:{src:a(884)}})]),t._v(" "),s("h4",{attrs:{id:"_2-响应头部"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-响应头部"}},[t._v("#")]),t._v(" (2)响应头部")]),t._v(" "),s("p",[s("code",[t._v("响应头部")]),t._v("用来描述"),s("code",[t._v("服务器的基本信息")]),t._v("。响应头部由多行 "),s("code",[t._v("键/值对")]),t._v(" 组成，每行的键和值之间用英文的冒号分隔。\n"),s("img",{attrs:{src:a(885)}})]),t._v(" "),s("h4",{attrs:{id:"_3-响应头部-常见的响应头字段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-响应头部-常见的响应头字段"}},[t._v("#")]),t._v(" (3)响应头部 – 常见的响应头字段")]),t._v(" "),s("img",{attrs:{src:a(886)}}),t._v("\n关于更多响应头字段的描述，可以查看 MDN [官方文档](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers)\n"),s("h4",{attrs:{id:"_4-空行-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-空行-2"}},[t._v("#")]),t._v(" (4) 空行")]),t._v(" "),s("p",[t._v("在最后一个响应头部字段结束之后，会紧跟一个"),s("code",[t._v("空行")]),t._v("，用来通知客户端"),s("code",[t._v("响应头部至此结束")]),t._v("。\n响应消息中的空行，用来分隔"),s("code",[t._v("响应头部")]),t._v("与"),s("code",[t._v("响应体")]),t._v("。")]),t._v(" "),s("h4",{attrs:{id:"_4-响应体"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-响应体"}},[t._v("#")]),t._v(" (4) 响应体")]),t._v(" "),s("p",[t._v("响应体中存放的，是服务器响应给客户端的资源内容。\n"),s("img",{attrs:{src:a(887)}})]),t._v(" "),s("h2",{attrs:{id:"四、http-请求方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、http-请求方法"}},[t._v("#")]),t._v(" 四、HTTP 请求方法")]),t._v(" "),s("p",[t._v("HTTP 请求方法，属于 HTTP 协议中的一部分，请求方法的作用是：用来表明要对服务器上的资源执行的操作。最常用的请求方法是 GET 和 POST。\n"),s("img",{attrs:{src:a(888)}})]),t._v(" "),s("h3",{attrs:{id:"_1、-什么是-http-响应状态码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、-什么是-http-响应状态码"}},[t._v("#")]),t._v(" 1、 什么是 HTTP 响应状态码")]),t._v(" "),s("p",[s("code",[t._v("HTTP 响应状态码")]),t._v("（HTTP Status Code），也属于 HTTP 协议的一部分，用来"),s("code",[t._v("标识响应的状态")]),t._v("。\n响应状态码会随着响应消息一起被发送至客户端浏览器，浏览器根据服务器返回的响应状态码，就能知道这次 HTTP 请求的结果是成功还是失败了。\n"),s("img",{attrs:{src:a(889)}})]),t._v(" "),s("h3",{attrs:{id:"_2、http-响应状态码的组成及分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、http-响应状态码的组成及分类"}},[t._v("#")]),t._v(" 2、HTTP 响应状态码的组成及分类")]),t._v(" "),s("p",[t._v("HTTP 状态码由"),s("code",[t._v("三个十进制数字")]),t._v("组成，"),s("code",[t._v("第一个十进制数字")]),t._v("定义了"),s("code",[t._v("状态码的类型")]),t._v("，后两个数字用来对状态码进行细分。\nHTTP 状态码共分为 5 种类型：\n"),s("img",{attrs:{src:a(890)}}),t._v("\n完整的 HTTP 响应状态码，可以参考 MDN "),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),s("OutboundLink")],1)]),t._v(" "),s("h4",{attrs:{id:"_1-2-成功相关的响应状态码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-成功相关的响应状态码"}},[t._v("#")]),t._v(" (1)"),s("font",{attrs:{color:"red"}},[t._v("2** 成功相关")]),t._v("的响应状态码")],1),t._v(" "),s("p",[t._v("2** 范围的状态码，表示服务器已成功接收到请求并进行处理。常见的 2** 类型的状态码如下：\n"),s("img",{attrs:{src:a(891)}})]),t._v(" "),s("h4",{attrs:{id:"_2-3-重定向相关的响应状态码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-重定向相关的响应状态码"}},[t._v("#")]),t._v(" (2)"),s("font",{attrs:{color:"red"}},[t._v("3** 重定向相关")]),t._v("的响应状态码")],1),t._v(" "),s("p",[t._v("3** 范围的状态码，表示表示服务器要求客户端重定向，需要客户端进一步的操作以完成资源的请求。常见的 3** 类型的状态码如下：\n"),s("img",{attrs:{src:a(892)}})]),t._v(" "),s("h4",{attrs:{id:"_3-4-客户端错误相关的响应状态码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-客户端错误相关的响应状态码"}},[t._v("#")]),t._v(" (3)"),s("font",{attrs:{color:"red"}},[t._v("4** 客户端错误相关")]),t._v("的响应状态码")],1),t._v(" "),s("p",[t._v("4** 范围的状态码，表示客户端的请求有非法内容，从而导致这次请求失败。常见的 4** 类型的状态码如下：\n"),s("img",{attrs:{src:a(893)}})]),t._v(" "),s("h4",{attrs:{id:"_4-5-服务端错误相关的响应状态码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-服务端错误相关的响应状态码"}},[t._v("#")]),t._v(" (4)"),s("font",{attrs:{color:"red"}},[t._v("5** 服务端错误相关")]),t._v("的响应状态码")],1),t._v(" "),s("p",[t._v("5** 范围的状态码，表示服务器未能正常处理客户端的请求而出现意外错误。常见的 5** 类型的状态码如下：\n"),s("img",{attrs:{src:a(894)}})])])}),[],!1,null,null,null);s.default=e.exports},865:function(t,s,a){t.exports=a.p+"assets/img/1.6bb78c98.png"},866:function(t,s,a){t.exports=a.p+"assets/img/2.ea3c5e99.png"},867:function(t,s,a){t.exports=a.p+"assets/img/3.3f7987e6.png"},868:function(t,s,a){t.exports=a.p+"assets/img/4.9ad844de.png"},869:function(t,s,a){t.exports=a.p+"assets/img/5.f165cfb9.png"},870:function(t,s,a){t.exports=a.p+"assets/img/6.c6f783e4.png"},871:function(t,s,a){t.exports=a.p+"assets/img/7.6aba053c.png"},872:function(t,s,a){t.exports=a.p+"assets/img/8.e5bcb474.png"},873:function(t,s,a){t.exports=a.p+"assets/img/9.f8a6fae8.png"},874:function(t,s,a){t.exports=a.p+"assets/img/10.56a54ea1.png"},875:function(t,s,a){t.exports=a.p+"assets/img/11.bb515107.png"},876:function(t,s,a){t.exports=a.p+"assets/img/12.2bcf6f5f.png"},877:function(t,s,a){t.exports=a.p+"assets/img/13.b04a708d.png"},878:function(t,s,a){t.exports=a.p+"assets/img/14.ba996ecf.png"},879:function(t,s,a){t.exports=a.p+"assets/img/15.856ad007.png"},880:function(t,s,a){t.exports=a.p+"assets/img/16.8ee5ebfd.png"},881:function(t,s,a){t.exports=a.p+"assets/img/17.d5b00b04.png"},882:function(t,s,a){t.exports=a.p+"assets/img/18.3af3ab78.png"},883:function(t,s,a){t.exports=a.p+"assets/img/19.98e9929a.png"},884:function(t,s,a){t.exports=a.p+"assets/img/20.b94abb65.png"},885:function(t,s,a){t.exports=a.p+"assets/img/21.522c4b75.png"},886:function(t,s,a){t.exports=a.p+"assets/img/22.a118bfaa.png"},887:function(t,s,a){t.exports=a.p+"assets/img/23.a53de24e.png"},888:function(t,s,a){t.exports=a.p+"assets/img/24.f6caff47.png"},889:function(t,s,a){t.exports=a.p+"assets/img/25.aa53b37d.png"},890:function(t,s,a){t.exports=a.p+"assets/img/26.bb536df8.png"},891:function(t,s,a){t.exports=a.p+"assets/img/27.627d0c4b.png"},892:function(t,s,a){t.exports=a.p+"assets/img/28.af6cc483.png"},893:function(t,s,a){t.exports=a.p+"assets/img/29.b8b08647.png"},894:function(t,s,a){t.exports=a.p+"assets/img/30.0369bec7.png"}}]);