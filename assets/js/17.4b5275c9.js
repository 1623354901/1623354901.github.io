(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{1176:function(s,t,a){"use strict";a.r(t);var e=a(2),n=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"git"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[s._v("#")]),s._v(" Git")]),s._v(" "),t("h2",{attrs:{id:"起步"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#起步"}},[s._v("#")]),s._v(" 起步")]),s._v(" "),t("h3",{attrs:{id:"_1、-版本控制软件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、-版本控制软件"}},[s._v("#")]),s._v(" 1、 版本控制软件")]),s._v(" "),t("p",[s._v("版本控制软件是一个用来"),t("code",[s._v("记录文件变化")]),s._v("，以便将来查阅特定版本修订情况的系统，因此有时也叫做“版本控制系统”。")]),s._v(" "),t("h3",{attrs:{id:"_2、-使用版本控制软件的好处"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、-使用版本控制软件的好处"}},[s._v("#")]),s._v(" 2、 使用版本控制软件的好处")]),s._v(" "),t("img",{attrs:{src:a(895)}}),s._v(" "),t("h3",{attrs:{id:"_3、版本控制系统的分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、版本控制系统的分类"}},[s._v("#")]),s._v(" 3、版本控制系统的分类")]),s._v(" "),t("img",{attrs:{src:a(896)}}),s._v(" "),t("img",{attrs:{src:a(897)}}),s._v(" "),t("img",{attrs:{src:a(898)}}),s._v(" "),t("img",{attrs:{src:a(899)}}),s._v(" "),t("h3",{attrs:{id:"_4、git-基本概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4、git-基本概念"}},[s._v("#")]),s._v(" 4、Git 基本概念")]),s._v(" "),t("h4",{attrs:{id:"_1-git-概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-git-概念"}},[s._v("#")]),s._v(" (1)git 概念")]),s._v(" "),t("p",[s._v("Git 是一个"),t("code",[s._v("开源的分布式版本控制系统")]),s._v("，是目前世界上"),t("code",[s._v("最先进、最流行")]),s._v("的版本控制系统。可以快速高效地处理从很小到非常大的项目版本管理。\n特点：项目越大越复杂，协同开发者越多，越能体现出 Git 的"),t("code",[s._v("高性能")]),s._v("和"),t("code",[s._v("高可用性")]),s._v("！")]),s._v(" "),t("h4",{attrs:{id:"_2-git-特性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-git-特性"}},[s._v("#")]),s._v(" （2）git 特性")]),s._v(" "),t("p",[s._v("Git 之所以快速和高效，主要依赖于它的如下两个特性：\n① 直接记录快照，而非差异比较\n② 近乎所有操作都是本地执行")]),s._v(" "),t("h4",{attrs:{id:"_3-svn-的差异比较"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-svn-的差异比较"}},[s._v("#")]),s._v(" （3）svn 的差异比较")]),s._v(" "),t("p",[s._v("传统的版本控制系统（例如 SVN）是"),t("code",[s._v("基于差异")]),s._v("的版本控制，它们存储的是"),t("code",[s._v("一组基本文件")]),s._v("和"),t("code",[s._v("每个文件随时间逐步累积的差异")]),s._v("。\n"),t("img",{attrs:{src:a(900)}})]),s._v(" "),t("ul",[t("li",[s._v("好处：节省磁盘空间")]),s._v(" "),t("li",[s._v("缺点："),t("code",[s._v("耗时、效率低")]),s._v("\n在每次切换版本的时候，都需要在基本文件的基础上，应用每个差异，从而生成目标版本对应的文件。")])]),s._v(" "),t("h4",{attrs:{id:"_4-git-的记录快照"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-git-的记录快照"}},[s._v("#")]),s._v(" (4)Git 的记录快照")]),s._v(" "),t("p",[t("code",[s._v("Git 快照")]),s._v("是在原有文件版本的基础上重新生成一份新的文件，"),t("code",[s._v("类似于备份")]),s._v("。为了效率，如果文件没有修改，Git\n不再重新存储该文件，而是只保留一个链接指向之前存储的文件\n"),t("img",{attrs:{src:a(901)}})]),s._v(" "),t("ul",[t("li",[s._v("缺点：占用磁盘空间较大")]),s._v(" "),t("li",[s._v("优点："),t("code",[s._v("版本切换时非常快")]),s._v("，因为每个版本都是完整的文件快照，切换版本时直接恢复目标版本的快照即可。")]),s._v(" "),t("li",[s._v("特点："),t("code",[s._v("空间换时间")])]),s._v(" "),t("li",[s._v("近乎所有操作都是本地执行\n"),t("img",{attrs:{src:a(902)}})])]),s._v(" "),t("h4",{attrs:{id:"_5-git-的三个区域"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-git-的三个区域"}},[s._v("#")]),s._v(" （5）git 的三个区域")]),s._v(" "),t("p",[s._v("使用 Git 管理的项目，拥有三个区域，分别是"),t("code",[s._v("工作区")]),s._v("、"),t("code",[s._v("暂存区")]),s._v("、"),t("code",[s._v("Git 仓库")])]),s._v(" "),t("ul",[t("li",[s._v("工作区：处理工作的区域")]),s._v(" "),t("li",[s._v("暂存区：已完成的工作的"),t("code",[s._v("临时存放区域,等待被提交")])]),s._v(" "),t("li",[s._v("Git 仓库：最终的存放区域")])]),s._v(" "),t("h4",{attrs:{id:"_6-git-中的三种状态"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-git-中的三种状态"}},[s._v("#")]),s._v(" （6）Git 中的三种状态")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("已修改 modified:表示修改了文件，但是还没将修改的结果放到暂存区")])]),s._v(" "),t("li",[t("p",[s._v("已暂存 staged：表示对已修改文件的当前版本做了标记，使之包含在下次提交的列表中")])]),s._v(" "),t("li",[t("p",[s._v("已提交 committed：表示文件已经安全地保存在本地的 Git 仓库中")]),s._v(" "),t("p",[s._v("注意："),t("br"),s._v("\n⚫ 工作区的文件被修改了，但还没有放到暂存区，就是"),t("code",[s._v("已修改")]),s._v("状态。"),t("br"),s._v("\n⚫ 如果文件已修改并放入暂存区，就属于"),t("code",[s._v("已暂存")]),s._v("状态。"),t("br"),s._v("\n⚫ 如果 Git 仓库中"),t("code",[s._v("保存着特定版本")]),s._v("的文件，就属于"),t("code",[s._v("已提交")]),s._v("状态。"),t("br")])])]),s._v(" "),t("h4",{attrs:{id:"_7-基本的-git-工作流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-基本的-git-工作流程"}},[s._v("#")]),s._v(" (7)基本的 Git 工作流程")]),s._v(" "),t("img",{attrs:{src:a(903)}}),s._v(" "),t("h2",{attrs:{id:"git-基础"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-基础"}},[s._v("#")]),s._v(" Git 基础")]),s._v(" "),t("h3",{attrs:{id:"配置用户信息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置用户信息"}},[s._v("#")]),s._v(" 配置用户信息")]),s._v(" "),t("p",[s._v("安装完 Git 之后，要做的第一件事就是设置自己的用户名和邮件地址。因为通过 Git 对项目进行版本管理的时候，Git 需要使用这些基本信息，来记录是谁对项目进行了操作：")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("git config "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("global user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'luying'")]),s._v("\ngit config "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("global user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("email "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'luying@qq.com'")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("注意：如果使用了"),t("code",[s._v("--global")]),s._v(" 选项，那么该命令只需要运行一次，即可永久生效。\n通过 "),t("code",[s._v("git config --global user.name")]),s._v(" 和 "),t("code",[s._v("git config --global user.email")]),s._v(" 配置的用户名和邮箱地址，会被写入到 "),t("code",[s._v("C:/Users/用户名文件夹/.gitconfig")]),s._v(" 文件中。这个文件是 Git 的"),t("code",[s._v("全局配置文件，配置一次即可永久生效")]),s._v("。\n可以使用记事本打开此文件，从而查看自己曾经对 Git 做了哪些全局性的配置。\n"),t("img",{attrs:{src:a(904)}})]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("# 查看所有的全局配置项\ngit config "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("list "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("global\n# 查看指定的全局配置项\ngit config user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name\ngit config user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("email\n\n# 打开git config 命令的帮助手册\ngit help config\n# "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("h 获取简单的help\ngit config "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("h\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("h3",{attrs:{id:"工作区中文件的-4-种状态"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#工作区中文件的-4-种状态"}},[s._v("#")]),s._v(" 工作区中文件的 4 种状态")]),s._v(" "),t("img",{attrs:{src:a(905)}}),s._v(" "),t("h3",{attrs:{id:"一些命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一些命令"}},[s._v("#")]),s._v(" 一些命令")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("# 查看文件的状态\ngit status\n# 以精简的方式显示文件状态\ngit status "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("s\n\n# 向暂存区添加一个文件\ngit add index"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("html\n# 向暂存区一次性添加多个文件\ngit add "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n# 提交到git仓库中保存\ngit commit "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("m "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'提交一个index.html文件'")]),s._v("\n\n# 撤销对文件的修改\n# 撤销对文件的修改指的是：把对工作区中对应文件的修改，"),t("span",{pre:!0,attrs:{class:"token template-string"}},[t("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("还原")]),t("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")])]),s._v("成Git 仓库中所保存的版本。操作的结果：所有的修改会丢失，且无法恢复！"),t("span",{pre:!0,attrs:{class:"token template-string"}},[t("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("危险性比较高，请慎重操作！")]),t("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")])]),s._v("\ngit checkout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" index"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("html\n"),t("span",{pre:!0,attrs:{class:"token template-string"}},[t("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("撤销操作的本质")]),t("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")])]),s._v("：用Git 仓库中保存的文件，覆盖工作区中指定的文件。\n\n# 取消暂存的文件\ngit reset "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("HEAD")]),s._v(" 要移除的文件名称\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br")])]),t("h3",{attrs:{id:"跳过使用暂存区域"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#跳过使用暂存区域"}},[s._v("#")]),s._v(" 跳过使用暂存区域")]),s._v(" "),t("p",[s._v("Git 标准的工作流程是"),t("code",[s._v("工作区")]),s._v(" → "),t("code",[s._v("暂存区")]),s._v(" → "),t("code",[s._v("Git 仓库")]),s._v("，但有时候这么做略显繁琐，此时可以跳过暂存区，直接将工作区中的修改提交到 Git 仓库，这时候 Git 工作的流程简化为了"),t("code",[s._v("工作区")]),s._v(" → "),t("code",[s._v("Git 仓库")]),s._v("。\nGit 提供了一个跳过使用暂存区域的方式，只要在提交的时候，给 "),t("code",[s._v("git commit")]),s._v(" 加上"),t("code",[s._v("-a")]),s._v(" 选项，Git 就会自动把所有已经跟踪过的文件暂存起来一并提交，从而跳过 git add 步骤：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git commit -a -m '描述信息'\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"移除文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#移除文件"}},[s._v("#")]),s._v(" 移除文件")]),s._v(" "),t("p",[s._v("从 Git 仓库中移除文件的方式有两种："),t("br"),s._v("\n① 从 Git 仓库和工作区中"),t("code",[s._v("同时移除")]),s._v("对应的文件"),t("br"),s._v("\n② 只从 Git 仓库中移除指定的文件，但保留工作区中对应的文件"),t("br")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 从 git 仓库和工作区同时移除 index.js文件\ngit rm -f index.js\n# 只从 git 仓库中移除index.js,但保留工作区中的index.js\ngit rm --cached index.js\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h3",{attrs:{id:"忽略文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#忽略文件"}},[s._v("#")]),s._v(" 忽略文件")]),s._v(" "),t("p",[s._v("一般我们总会有些文件无需纳入 Git 的管理，也不希望它们总出现在未跟踪文件列表。在这种情况下，我们可以创建一个名为.gitignore 的配置文件，列出要忽略的文件的匹配模式。\n文件"),t("code",[s._v(".gitignore")]),s._v("的格式规范如下："),t("br"),s._v("\n① 以"),t("code",[s._v("# 开头")]),s._v("的是注释"),t("br"),s._v("\n② 以"),t("code",[s._v("/结尾")]),s._v("的是目录"),t("br"),s._v("\n③ 以"),t("code",[s._v("/开头")]),s._v("防止递归"),t("br"),s._v("\n④ 以"),t("code",[s._v("!开头")]),s._v("表示取反"),t("br"),s._v("\n⑤ 可以使用 "),t("code",[s._v("glob 模式")]),s._v("进行文件和文件夹的匹配（glob 指简化了的正则表达式）"),t("br")]),s._v(" "),t("p",[s._v("所谓的"),t("code",[s._v("glob 模式")]),s._v("是指简化了的正则表达式："),t("br"),s._v("\n①"),t("code",[s._v("星号*")]),s._v("匹配"),t("code",[s._v("零个或多个任意字符")]),t("br"),s._v("\n②"),t("code",[s._v("[abc]")]),s._v("匹配"),t("code",[s._v("任何一个列在方括号中的字符")]),s._v("（此案例匹配一个 a 或匹配一个 b 或匹配一个 c）"),t("br"),s._v("\n③"),t("code",[s._v("问号?")]),s._v("只"),t("code",[s._v("匹配一个任意字符")]),t("br"),s._v("\n④ 在方括号中使用"),t("code",[s._v("短划线")]),s._v("分隔两个字符，表示所有在这两个字符范围内的都可以匹配（比如[0-9] 表示匹配所有 0 到 9 的数字）"),t("br"),s._v("\n⑤"),t("code",[s._v("两个星号**")]),s._v(" 表示"),t("code",[s._v("匹配任意中间目录")]),s._v("（比如 a/**/z 可以匹配 a/z 、a/b/z 或 a/b/c/z 等）"),t("br")]),s._v(" "),t("p",[s._v("举例：")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("# 忽略所有的a文件\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("a\n# 但跟踪所有的 lib"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("a，即便你在前面忽略了 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("a 文件\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("lib"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n# 只忽略当前目录下的 "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TODO")]),s._v(" 文件，而不忽略 subdir"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TODO")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TODO")]),s._v("\n# 忽略任何目录下名为 build 的文件夹\nbuild"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("\n# 忽略 doc"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("notes"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("txt，但不忽略 doc"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("server"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("arch"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("txt\ndoc"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*.txt\n# 忽略 doc/ 目录及其所有子目录下的 ·pdf 文件\ndoc/**/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("pdf\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("h3",{attrs:{id:"查看提交历史-git-log"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看提交历史-git-log"}},[s._v("#")]),s._v(" 查看提交历史：git log")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("# 按时间先后顺序列出所有的提交历史，最近的提交排在最上面\ngit log\n# 只展示最新的两条提交历史，数字可以按需进行填写\ngit log "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n\n# 在一行上展示最近两条提交历史的信息\ngit log "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("pretty"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("oneline\n\n# 在一行上展示最近两条提交历史的信息，并自定义输出的格式\n# "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v("h 提交的简写哈希值"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v("an作者名字\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v("ar作者修订日期，按多久以前的方式显示\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v("s提交说明\ngit log "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("pretty"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("format"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v('"'),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v("h  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v("an  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v("ar "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v("s\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("h3",{attrs:{id:"回退到指定的版本"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#回退到指定的版本"}},[s._v("#")]),s._v(" 回退到指定的版本")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("# 在一行上展示所有的提交历史\ngit log "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("pretty"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("oneline\n# 使用 git reset "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("hard 命令，根据指定的提交 "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ID")]),s._v(" 回退到指定版本\ngit reset "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("hard "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("CommitID"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n# 在旧版本中使用 git reflog "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("pretty"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("oneline 命令，查看命令操作的历史\ngit reflog "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("pretty"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("oneline\n# 再次根据最新的提交 "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ID")]),s._v("，跳转到最新的版本\ngit reset "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("hard "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("CommitID"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("h2",{attrs:{id:"github"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#github"}},[s._v("#")]),s._v(" Github")]),s._v(" "),t("p",[s._v("开源项目托管平台："),t("br"),s._v("\n专门用于"),t("code",[s._v("免费存放开源项目源代码的网站")]),s._v("，叫做"),t("code",[s._v("开源项目托管平台")]),s._v("。目前世界上"),t("code",[s._v("比较出名")]),s._v("的开源项目托管平台主要有以下 3 个："),t("br"),s._v("\n⚫Github（全球最牛的开源项目托管平台，没有之一）"),t("br"),s._v("\n⚫Gitlab（对代码私有性支持较好，因此企业用户较多）"),t("br"),s._v("\n⚫Gitee（又叫做"),t("code",[s._v("码云")]),s._v("，是国产的开源项目托管平台。访问速度快、纯中文界面、使用友好）"),t("br"),s._v("\n注意：以上 3 个开源项目托管平台，只能托管以 Git 管理的项目源代码，因此，它们的名字都以 Git 开头。"),t("br")]),s._v(" "),t("h2",{attrs:{id:"远程仓库的两种访问方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#远程仓库的两种访问方式"}},[s._v("#")]),s._v(" 远程仓库的两种访问方式")]),s._v(" "),t("p",[s._v("Github 上的远程仓库，有两种访问方式，分别是 "),t("code",[s._v("HTTPS")]),s._v(" 和 "),t("code",[s._v("SSH")]),s._v("。它们的区别是："),t("br"),s._v("\n①HTTPS："),t("code",[s._v("零配置")]),s._v("；但是每次访问仓库时，需要重复输入 Github 的账号和密码才能访问成功"),t("br"),s._v("\n②SSH："),t("code",[s._v("需要进行额外的配置")]),s._v("；但是配置成功后，每次访问仓库时，不需重复输入 Github 的账号和密码"),t("br"),s._v("\n注意：在实际开发中，"),t("code",[s._v("推荐使用 SSH 的方式访问远程仓库")]),s._v("。")]),s._v(" "),t("p",[s._v("SSH key:"),t("br"),s._v("\nSSH key 的"),t("code",[s._v("作用")]),s._v("：实现本地仓库和 Github 之间"),t("code",[s._v("免登录")]),s._v("的"),t("code",[s._v("加密数据传输")]),s._v("。"),t("br"),s._v("\nSSH key 的"),t("code",[s._v("好处")]),s._v("：免登录身份认证、数据加密传输。"),t("br"),s._v("\nSSH key 由"),t("code",[s._v("两部分组成")]),s._v("，分别是："),t("br"),s._v("\n①id_rsa（私钥文件，存放于客户端的电脑中即可）"),t("br"),s._v("\n②id_rsa.pub（公钥文件，需要配置到 Github 中）"),t("br")]),s._v(" "),t("h4",{attrs:{id:"生成-ssh-key"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#生成-ssh-key"}},[s._v("#")]),s._v(" 生成 ssh key :")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('ssh-keygen -t rsa -b 4096 -C "your_email@example.com"\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h4",{attrs:{id:"配置-ssh-key"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置-ssh-key"}},[s._v("#")]),s._v(" 配置 SSH key")]),s._v(" "),t("p",[s._v("使用记事本打开 id_rsa.pub 文件，复制里面的文本内容"),t("br"),s._v("\n② 在浏览器中登录 Github，点击头像-> Settings-> SSH and GPG Keys -> New SSH key"),t("br"),s._v("\n③ 将 id_rsa.pub 文件中的内容，粘贴到 Key 对应的文本框中"),t("br"),s._v("\n④ 在 Title 文本框中任意填写一个名称，来标识这个 Key 从何而来"),t("br")]),s._v(" "),t("h1",{attrs:{id:"git-分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-分支"}},[s._v("#")]),s._v(" git 分支")]),s._v(" "),t("h3",{attrs:{id:"_1-分支的概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-分支的概念"}},[s._v("#")]),s._v(" 1. 分支的概念")]),s._v(" "),t("p",[s._v("分支就是科幻电影里面的"),t("code",[s._v("平行宇宙")]),s._v("，当你正在电脑前努力学习 Git 的时候，另一个你正在另一个平行宇宙里努力学习 SVN。\n如果两个平行宇宙互不干扰，那对现在的你也没啥影响。\n不过，在某个时间点，两个平行宇宙合并了，结果，你既学会了 Git 又学会了 SVN！")]),s._v(" "),t("p",[s._v("在进行多人协作开发的时候，为了防止互相干扰，提高协同开发的体验，建议每个开发者都基于分支进行项目功能的开发，例如：\n"),t("img",{attrs:{src:a(906)}}),s._v("\n在初始化本地 Git 仓库的时候，Git 默认已经帮我们创建了一个名字叫做 master 的分支。通常我们把这个 master 分支叫做"),t("code",[s._v("主分支")]),s._v("。\n在实际工作中，master 主分支的作用是："),t("code",[s._v("用来保存和记录整个项目已完成的功能代码")]),s._v("。\n因此，不允许程序员直接在 master 分支上修改代码，因为这样做的风险太高，容易导致整个项目崩溃。\n由于程序员不能直接在 master 分支上进行功能的开发，所以就有了功能分支的概念。\n"),t("code",[s._v("功能分支")]),s._v("指的是"),t("code",[s._v("专门用来开发新功能的分支")]),s._v("，它是临时从 master 主分支上分叉出来的，当新功能开发且测试完毕后，最终需要合并到 master 主分支上")]),s._v(" "),t("p",[s._v("查看分支命令：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git branch\n# 创建新分支\ngit branch 分支名称\n# 切换分支\ngit checkout 分支名\n# 快速创建和切换新分支\ngit checkout -b 分支名称\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v('git checkout -b 分支名称" 是下面两条命令的简写形式：\n①git branch 分支名称\n②git checkout 分支名称')]),s._v(" "),t("h3",{attrs:{id:"合并分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#合并分支"}},[s._v("#")]),s._v(" 合并分支")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 1.切换到 master 分支\ngit checkout master\n# 2.在 master 分支上运行 git merge 命令，将 login 分支的代码合并到 master 分支\ngit merge login\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("img",{attrs:{src:a(907)}}),s._v("\n### 删除分支\n"),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git branch -d 分支名称\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("img",{attrs:{src:a(908)}}),s._v(" "),t("h3",{attrs:{id:"遇到冲突时的分支合并"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#遇到冲突时的分支合并"}},[s._v("#")]),s._v(" 遇到冲突时的分支合并")]),s._v(" "),t("p",[s._v("如果在"),t("code",[s._v("两个不同的分支")]),s._v("中，对"),t("code",[s._v("同一个文件")]),s._v("进行了"),t("code",[s._v("不同的修改")]),s._v("，Git 就没法干净的合并它们。此时，我们需要打开这些包含冲突的文件然后"),t("code",[s._v("手动解决冲突")]),s._v("。")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("# 假设"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("在把 reg 分支合并到 master 分支期间，代码发生了冲突\ngit checkout master\ngit merge reg\n# 打开包含冲突的文件，手动解决冲突之后，再执行如下的命令\ngit add\ngit commit "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("m "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"解决了分支合并冲突的问题"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h3",{attrs:{id:"将本地分支推送到远程仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#将本地分支推送到远程仓库"}},[s._v("#")]),s._v(" 将本地分支推送到远程仓库")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("# "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("u 表示把本地分支和远程分支进行关联，只在第一次推送的时候需要带 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("u 参数\ngit push "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("u 远程仓库的别名 本地分支名称"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("远程分支名称\n# 实际案例"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\ngit push "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("u origin payment"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("pay\n# 如果希望远程分支的名称和本地分支名称保持一致，可以对命令进行简化"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\ngit push "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("u origin payment\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("注意：第一次推送分支需要带"),t("code",[s._v("-u 参数")]),s._v("，此后可以直接使用 "),t("code",[s._v("git push")]),s._v(" 推送代码到远程分支。")]),s._v(" "),t("h3",{attrs:{id:"查看远程仓库中所有的分支列表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看远程仓库中所有的分支列表"}},[s._v("#")]),s._v(" 查看远程仓库中所有的分支列表")]),s._v(" "),t("p",[s._v("通过如下的命令，可以查看远程仓库中，所有的分支列表的信息：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git remote show 远程仓库名称\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"跟踪分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#跟踪分支"}},[s._v("#")]),s._v(" 跟踪分支")]),s._v(" "),t("p",[s._v("跟踪分支指的是：从远程仓库中，把远程分支下载到本地仓库中。需要运行的命令如下：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 从远程仓库中，把对应的远程分支下载到本地仓库，保持本地分支和远程分支名称相同\ngit checkout 远程分支的名称\n# 示例:\ngit checkout pay\n# 从远程仓库中，把对应的远程分支下载到本地仓库，并把下载的本地分支进行重命名\ngit checkout -b 本地分支名称 远程仓库名称/远程分支名称\n# 示例:\ngit checkout -b payment origin/pay\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("h3",{attrs:{id:"拉取远程分支的最新的代码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#拉取远程分支的最新的代码"}},[s._v("#")]),s._v(" 拉取远程分支的最新的代码")]),s._v(" "),t("p",[s._v("可以使用如下的命令，把远程分支最新的代码下载到本地对应的分支中：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 从远程仓库，拉取当前分支最新的代码，保持当前分支的代码和远程分支代码一致\ngit pull\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h3",{attrs:{id:"删除远程分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除远程分支"}},[s._v("#")]),s._v(" 删除远程分支")]),s._v(" "),t("p",[s._v("可以使用如下的命令，删除远程仓库中指定的分支：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v(" # 删除远程仓库中，指定名称的远程分支\ngit push 远程仓库名称 --delete 远程分支名称\n# 示例:\ngit push origin --delete pay\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("总结：")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("能够掌握 Git 中基本命令的使用\ngit init\ngit add\ngit commit "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v('m"提交消息\ngit status 和 git status '),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("s\n\n能够使用 Github 创建和维护远程仓库\n能够配置 Github 的 "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SSH")]),s._v(" 访问\n能够将本地仓库上传到 Github\n\n能够掌握 Git 分支的基本使用\ngit checkout "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("b 新分支名称\ngit push "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("u origin 新分支名称\ngit checkout 分支名称\ngit branch\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])])])}),[],!1,null,null,null);t.default=n.exports},895:function(s,t,a){s.exports=a.p+"assets/img/1.cd74f8ca.png"},896:function(s,t,a){s.exports=a.p+"assets/img/2.abcf2a30.png"},897:function(s,t,a){s.exports=a.p+"assets/img/3.2aa19d78.png"},898:function(s,t,a){s.exports=a.p+"assets/img/4.af67a6d4.png"},899:function(s,t,a){s.exports=a.p+"assets/img/5.822328aa.png"},900:function(s,t,a){s.exports=a.p+"assets/img/6.f7143db5.png"},901:function(s,t,a){s.exports=a.p+"assets/img/7.cf15bcd6.png"},902:function(s,t,a){s.exports=a.p+"assets/img/8.020e3e57.png"},903:function(s,t,a){s.exports=a.p+"assets/img/9.d1d8d7cb.png"},904:function(s,t,a){s.exports=a.p+"assets/img/10.390954f9.png"},905:function(s,t,a){s.exports=a.p+"assets/img/11.68ad2d4a.png"},906:function(s,t,a){s.exports=a.p+"assets/img/14.e6b7ec83.png"},907:function(s,t,a){s.exports=a.p+"assets/img/15.a91fa58f.png"},908:function(s,t,a){s.exports=a.p+"assets/img/16.b3b40642.png"}}]);